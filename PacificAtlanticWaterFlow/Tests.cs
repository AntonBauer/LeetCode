using NUnit.Framework;

namespace PacificAtlanticWaterFlow;

[TestFixture]
public class Tests
{
    [Test, TestCaseSource(nameof(TestCases))]
    public void TestPacificAtlantic(List<int[]> heights, List<int[]> expected)
    {
        // Act
        var actual = Solution.PacificAtlantic(heights.ToArray());

        // Assert
        CollectionAssert.AreEquivalent(expected, actual);
    }

    public static IEnumerable<TestCaseData> TestCases()
    {
        yield return new TestCaseData(new[]
            {
                new[] { 1, 2, 2, 3, 5 },
                new[] { 3, 2, 3, 4, 4 },
                new[] { 2, 4, 5, 3, 1 },
                new[] { 6, 7, 1, 4, 5 },
                new[] { 5, 1, 1, 2, 4 }
            }.ToList(),
            new[]
            {
                new[] { 0, 4 }, new[] { 1, 3 },
                new[] { 1, 4 }, new[] { 2, 2 },
                new[] { 3, 0 }, new[] { 3, 1 },
                new[] { 4, 0 }
            }.ToList()).SetName("01");

        yield return new TestCaseData(new[]
            {
                new[] { 1 }
            }.ToList(),
            new[]
            {
                new[] { 0, 0 }
            }.ToList()).SetName("02");
        yield return new TestCaseData(new[]
            {
                new[] { 10, 10, 1, 11, 2, 15, 17, 6, 17, 10, 0, 10, 18, 9, 16, 13, 8, 9, 12, 6, 3, 2, 5, 19, 4, 14 },
                new[] { 12, 19, 13, 2, 7, 2, 3, 8, 17, 4, 2, 1, 8, 13, 7, 2, 10, 16, 12, 3, 4, 12, 4, 16, 0, 12 },
                new[] { 1, 12, 9, 18, 12, 16, 17, 5, 13, 0, 7, 13, 12, 13, 6, 2, 11, 19, 7, 2, 6, 11, 11, 0, 17, 6 },
                new[] { 1, 12, 2, 0, 11, 7, 7, 3, 7, 13, 11, 1, 11, 15, 5, 13, 14, 12, 4, 10, 5, 16, 3, 17, 18, 12 },
                new[] { 9, 16, 11, 5, 9, 13, 7, 18, 18, 14, 19, 10, 9, 4, 8, 14, 4, 19, 13, 1, 14, 8, 0, 3, 12, 10 },
                new[] { 10, 19, 9, 11, 1, 18, 1, 2, 1, 8, 1, 5, 2, 15, 14, 13, 18, 18, 11, 4, 15, 3, 15, 12, 12, 2 },
                new[] { 0, 10, 9, 2, 15, 9, 12, 7, 0, 0, 12, 18, 9, 12, 18, 4, 18, 10, 3, 1, 17, 14, 13, 18, 9, 4 },
                new[] { 3, 19, 9, 16, 16, 19, 11, 19, 6, 9, 18, 0, 12, 11, 13, 1, 15, 6, 9, 18, 9, 6, 3, 12, 12, 2 },
                new[] { 0, 16, 15, 12, 3, 19, 18, 9, 5, 1, 4, 3, 19, 15, 1, 0, 7, 10, 14, 4, 8, 10, 15, 16, 14, 8 },
                new[] { 15, 9, 3, 15, 19, 17, 17, 10, 9, 8, 16, 11, 3, 15, 15, 9, 1, 14, 11, 13, 16, 7, 1, 7, 13, 5 },
                new[] { 9, 19, 6, 7, 19, 14, 4, 18, 6, 10, 19, 13, 12, 7, 7, 15, 6, 10, 7, 8, 8, 8, 19, 13, 17, 14 },
                new[] { 14, 7, 1, 15, 2, 6, 12, 4, 2, 19, 17, 17, 8, 9, 19, 10, 0, 12, 4, 12, 4, 16, 15, 18, 8, 0 },
                new[] { 4, 8, 5, 8, 0, 2, 19, 18, 1, 7, 13, 9, 13, 16, 6, 15, 15, 12, 18, 5, 8, 11, 6, 17, 5, 11 },
                new[] { 17, 16, 9, 19, 12, 6, 13, 19, 0, 6, 7, 9, 7, 13, 9, 18, 5, 15, 16, 8, 18, 9, 6, 0, 11, 14 },
                new[] { 11, 5, 13, 3, 12, 19, 5, 15, 2, 15, 9, 16, 6, 12, 8, 0, 19, 19, 11, 0, 16, 8, 15, 15, 1, 12 },
                new[] { 15, 16, 16, 19, 14, 1, 2, 11, 14, 8, 16, 13, 2, 0, 3, 8, 1, 5, 4, 15, 12, 5, 13, 3, 5, 3 }
            }.ToList(),
            new[]
            {
                new[] { 0, 25 },
                new[] { 15, 0 },
                new[] { 15, 1 },
                new[] { 15, 2 },
                new[] { 15, 3 },
            }.ToList()).SetName("03");
    }
}